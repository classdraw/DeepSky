---uicache保存ui
---@class UICache : BaseClass
local UICache = BaseClass("UICache")
local CacheTime=60;
---可以丢入到updatemanager更新处理逻辑
function UICache:ctor(rootTran)
    self.m_kUICtrls={};--key value 准备小销毁的ctrl 此时和view强绑定关系

    self.m_kRootTran=rootTran;
    self.m_kUpdateMethod=handler(self,self.Update);
    UpdateManager:GetInstance():AddUpdate(self.m_kUpdateMethod);
end

function UICache:dtor()
    if self.m_kUpdateMethod~=nil then
        UpdateManager:GetInstance():RemoveUpdate(self.m_kUpdateMethod);
    end
    self.m_kUpdateMethod=nil;

    local cCount=#self.m_kUICtrls;
    for idx=cCount,1,-1 do
        local ctrl=self.m_kUICtrls[idx];
        ctrl:Release();
    end
    self.m_kUICtrls={};
end


---@param uiCtrl UIBaseCtrl
function UICache:AddUI(uiCtrl)
    local time=GameUtils:GetRealStartTime();
    --显示层父节点处理
    local view=uiCtrl:GetView();
    if view~=nil then
        view.transform:SetParent(self.m_kRootTran);
        view.transform.localScale=Vector3(0,0,0);
    end
    --逻辑层塞入
    table.insert(self.m_kUICtrls,uiCtrl);
    --记录缓存时间
    uiCtrl.m_fCacheTime=time;
end

---@return UIBaseCtrl
function UICache:GetUI(uiName)
    local cCount=#self.m_kUICtrls;
    for idx=1,cCount do
        local ctrl=self.m_kUICtrls[idx];
        if ctrl:GetUIName()==uiName then
            table.remove(self.m_kUICtrls,idx);
            return ctrl;
        end
    end
    return nil;
end

function UICache:Update()
    local time=GameUtils:GetRealStartTime();
    local cCount=#self.m_kUICtrls;
    for idx=cCount,1,-1 do
        local ctrl=self.m_kUICtrls[idx];
        local cacheTime=ctrl:GetUIData().cacheTime;
        if cacheTime==nil then
            cacheTime=CacheTime;
        end
        if cacheTime~=-1 and time-ctrl.m_fCacheTime>=cacheTime then
            ctrl:Release();
            table.remove(self.m_kUICtrls,idx);
        end
    end
end

---@return UIBaseCtrl
function UICache:GetCtrl(uiData)
    local findCtrl=nil;
    local cCount=#self.m_kUICtrls;
    for idx=cCount,1,-1 do
        local cc=self.m_kUICtrls[idx];
        if cc:GetUIName()==uiData.uiName then
            findCtrl=cc;
            table.remove(self.m_kUICtrls,idx);
            break;
        end
    end

    if findCtrl==nil then
        local uiCtrlPath=uiData.path.."Ctrl";
        local ctrl=require(uiCtrlPath).New();
        return ctrl;
    else
        return findCtrl;
    end
end

return UICache;
