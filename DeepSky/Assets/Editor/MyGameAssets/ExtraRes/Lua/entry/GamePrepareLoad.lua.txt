require("consts.CS_Define")--CS代码引用文件
-- require("functions.functions")
-- require("functions.debug")
local csModelList={
    --csmodel预备加载
    -- "Game.Data.BloodModel",
    -- "Game.Data.MapModel",
    -- "Game.Data.MapObjectModel",
    -- "Game.Data.LanguageModel",
    -- "Game.Data.MonsterModel",
    -- "Game.Data.RoleModel",
    -- "Game.Data.NpcDataModel",
    -- "Game.Data.NpcFunctionModel",
    -- "Game.Data.PartDisplayModel",
    -- "Game.Data.TriggerDataModel",
};

local luaList={
    --lua预备加载模块
    "utils.XLogger",
    "functions.init",
    "entry.GlobalRequire",
    "entry.XLuaFacade",

    -- "components.Component_Base",
    -- "globalrequire",
    -- 

    -- "consts.T_Define",--放在最后
};

GamePrepareLoad = {};
local completeCallback=nil;
local repeatTimeId=nil;

local curIndex=1;

function GamePrepareLoad.StartLoad(callback)
    completeCallback=callback;
    -- dump(csModelList);
    repeatTimeId=XFacade.CallRepeat(0.05,GamePrepareLoad.Update);
end


function GamePrepareLoad.Update()

    local luaCount=#luaList;
    local csCount=#csModelList;
    local allCount=7;

    local isSuccess=GamePrepareLoad.Load();
    if isSuccess then
        XFacade.StopTime(repeatTimeId);
        -- CS.Game.UI.UIManager.PreCacheWindow("UI_Main");//jyy
        repeatTimeId=nil;

        --回调方法调用
        if completeCallback then
            -- XLogger.Log("lua文件和model加载结束");
            completeCallback();
        end

    end

    local pro=curIndex/allCount;
    if pro>1 then
        pro=1;
    end
    -- XLogger.Log("pro.."..pro);
    -- GlobalEventListener.DispatchEvent( GlobalEventDefine.UI_Launch_Progress,pro);

end

function GamePrepareLoad.Load()

    local luaCount=#luaList;
    local csCount=#csModelList;
    if curIndex>luaCount+csCount then

        return true;
    else
        if curIndex<=luaCount then
            require(luaList[curIndex]);
            -- XLogger.Log("加载lua:"..luaList[curIndex]);
        else
            local modelName=csModelList[curIndex-luaCount];
            --后续model加载写这里
            -- DataManager.ShareInstance:InitModel(modelName);
            -- XLogger.Log("加载cs:"..modelName);
        end

        curIndex=curIndex+1;
        return false;
    end
end